name: Manual deploy to Firebase

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: 'App version'
        required: true
      userGroup:
        description: 'Firebase user group'
        default: 'external-users'
        required: true
      config:
        description: 'Configuration Dev/Staging'
        default: Staging
        required: true
        type: choice
        options:
        - Staging
        - Dev
  # release:
  #   types: [published]

jobs:
  build:
    name: Archive, export and upload to Firebase
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup iOS Environment
        uses: ./.github/actions/install
        with:
          xcode-version: 15.2
          scw_access_key: ${{ secrets.SCW_ACCESS_KEY }}
          scw_secret_key: ${{ secrets.SCW_SECRET_KEY }}
          scw_default_project_id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          scw_default_organization_id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - name: Set env BUILD_PROVISION_PROFILE_BASE64
        run: |
          if [[ ${{ github.event.inputs.config }} == 'Staging' ]]; then
              echo "BUILD_PROVISION_PROFILE_BASE64=${{ secrets.STAGING_PROVISIONING_PROFILE_BASE64 }}" >> "$GITHUB_ENV"
          else
              echo "BUILD_PROVISION_PROFILE_BASE64=${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}" >> "$GITHUB_ENV"
              echo "PUSH_NOTIFICATIONS_EXT_PROFILE_BASE64=${{ secrets.PUSH_NOTIFICATIONS_EXT_PROFILE_BASE64 }}" >> "$GITHUB_ENV"
          fi

      - name: Bump version
        uses: damienaicheh/update-ios-version-info-plist-action@v1.0.0
        with:
          info-plist-path: './novawallet/Info.plist'
          bundle-short-version-string: ${{ github.event.inputs.appVersion }}
          bundle-version: ${{github.run_number}}
          print-file: true

      - name: Archive
        run: xcodebuild archive -archivePath ./AdHoc.xcarchive -scheme novawallet -workspace novawallet.xcworkspace -configuration ${{ github.event.inputs.config }}

      - name: Export Staging archive
        if: ${{ github.event.inputs.config == 'Staging' }}
        run: xcodebuild -exportArchive -archivePath ./AdHoc.xcarchive -exportPath ./export -exportOptionsPlist ./novawallet/exportOptionsStaging.plist

      - name: Export Dev archive
        if: ${{ github.event.inputs.config == 'Dev' }}
        run: xcodebuild -exportArchive -archivePath ./AdHoc.xcarchive -exportPath ./export -exportOptionsPlist ./novawallet/exportOptionsAdHoc.plist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: novawallet.ipa
          path: export

  # wzieba/Firebase-Distribution-Github-Action@v1 doesn't work on macos machine, so we need to upload artifacts on macos, then download them on linux :((
  distribute-ios:
    needs: build
    name: Distribute archive to Firebase
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v4
        with:
          name: novawallet.ipa
          path: export

      - name: Upload artifact to Firebase with Dev Id
        if: ${{ github.event.inputs.config == 'Dev' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: ${{ github.event.inputs.userGroup }}
          file: export/novawallet.ipa
          releaseNotes: ${{ github.event.head_commit.message }}

      - name: Upload artifact to Firebase with Staging Id
        if: ${{ github.event.inputs.config == 'Staging' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_STAGING_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: ${{ github.event.inputs.userGroup }}
          file: export/novawallet.ipa
          releaseNotes: ${{ github.event.head_commit.message }}
