name: 'Setup iOS Environment'
description: 'Installs Xcode, and installs Cocoapods'
inputs:
  xcode-version:
    description: 'The Xcode version to install'
    required: true
    default: '15.2'
  scw_access_key:
    description: 'Scaleway Access Key'
    required: true
  scw_secret_key:
    description: 'Scaleway Secret Key'
    required: true
  scw_default_project_id:
    description: 'Scaleway Default Project ID'
    required: true
  scw_default_organization_id:
    description: 'Scaleway Default Organization ID'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: scaleway/action-scw-secret@v0
      with:
        # ENV_NAME,SECRET_NAME (with path)
        secret-names: |
          MERCURYO_PRODUCTION_SECRET,/dev/ios/MERCURYO_PRODUCTION_SECRET
          MERCURYO_TEST_SECRET,/dev/ios/MERCURYO_TEST_SECRET
          MOONBEAM_HISTORY_API_KEY,/dev/ios/MOONBEAM_HISTORY_API_KEY
          MOONRIVER_HISTORY_API_KEY,/dev/ios/MOONRIVER_HISTORY_API_KEY
          ETHERSCAN_HISTORY_API_KEY,/dev/ios/ETHERSCAN_HISTORY_API_KEY
          ACALA_AUTH_TOKEN,/dev/ios/ACALA_AUTH_TOKEN
          ACALA_TEST_AUTH_TOKEN,/dev/ios/ACALA_TEST_AUTH_TOKEN
          MOONBEAM_API_KEY,/dev/ios/MOONBEAM_API_KEY
          MOONBEAM_TEST_API_KEY,/dev/ios/MOONBEAM_TEST_API_KEY
          WC_PROJECT_ID,/dev/ios/WC_PROJECT_ID
          POLKASSEMBLY_SUMMARY_API_KEY,/dev/ios/POLKASSEMBLY_SUMMARY_API_KEY
          BUILD_CERTIFICATE_BASE64,/dev/ios/BUILD_CERTIFICATE_BASE64
          BUILD_PROVISION_PROFILE_BASE64,/dev/ios/BUILD_PROVISION_PROFILE_BASE64
          PUSH_NOTIFICATIONS_EXT_PROFILE_BASE64,/dev/ios/PUSH_NOTIFICATIONS_EXT_PROFILE_BASE64
          KEYCHAIN_PASSWORD,/dev/ios/KEYCHAIN_PASSWORD
          GOOGLE_SERVICE_FILE_CONTENT,/dev/ios/GOOGLE_SERVICE_FILE_CONTENT
        access-key: ${{ inputs.scw_access_key }}
        secret-key: ${{ inputs.scw_secret_key }}
        default-project-id: ${{ inputs.scw_default_project_id }}
        default-organization-id: ${{ inputs.scw_default_organization_id }}

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode-version }}

    - uses: actions/cache@v4
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - run: pod install --repo-update
      shell: bash

    # Source https://docs.github.com/en/actions/deployment/installing-an-apple-certificate-on-macos-runners-for-xcode-development#add-a-step-to-your-workflow
    - name: Install the Apple certificate and provisioning profile
      env:
        P12_PASSWORD: ""
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        PUSH_NOTIFICATIONS_PP_PATH=$RUNNER_TEMP/push_notifications_build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
        echo -n "$PUSH_NOTIFICATIONS_EXT_PROFILE_BASE64" | base64 --decode -o $PUSH_NOTIFICATIONS_PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PUSH_NOTIFICATIONS_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      shell: bash

    - name: Push Notifications Setup
      run: |
        GOOGLE_SERVICE_PATH=./novawallet/GoogleService-Info-Dev.plist

        echo "$GOOGLE_SERVICE_INFO" > $GOOGLE_SERVICE_PATH
      shell: bash
